<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dhu.Mapper.UserMapper">

    <insert id="insert" parameterType="com.dhu.Pojo.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, role, name, gender, email, phone)
        VALUES (#{username}, #{password}, #{role}, #{name}, #{gender}, #{email}, #{phone})
    </insert>

    <select id="findByUsernameAndPassword" resultType="com.dhu.Pojo.User">
        select * from user
        where username = #{username} and password = #{password}
    </select>

    <select id="findByUsername" resultType="com.dhu.Pojo.User">
        select * from user where username = #{username}
    </select>

    <select id="list" resultType="com.dhu.Pojo.User">
        SELECT * FROM user
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="role != null and role != ''">
                AND role = #{role}
            </if>
        </where>
    </select>

<!--    根据ID查询单个用户-->
    <select id="getById" resultType="com.dhu.Pojo.User">
        SELECT * FROM user WHERE id = #{id}
    </select>

<!--    根据ID修改用户信息-->
    <update id="updateById">
        UPDATE user
    <set>
        <if test="username != null and username != ''">username = #{username},</if>
        <if test="password != null and password != ''">password = #{password},</if>
        <if test="role != null and role != ''">role = #{role},</if>
        <if test="name != null and name != ''">name = #{name},</if>
        <if test="gender != null and gender != ''">gender = #{gender},</if>
        <if test="email != null and email != ''">email = #{email},</if>
        <if test="phone != null and phone != ''">phone = #{phone},</if>
    </set>
        WHERE id = #{id}
    </update>

<!--    根据Ids批量删除用户信息-->
    <delete id="deleteByIds">
        delete from user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>